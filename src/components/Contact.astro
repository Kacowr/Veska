---
import "./Contact.scss";
import phone from "./../images/phone.svg";
import envelope from "./../images/envelope.svg";

const t = Astro.props.t;
const successMessage = Astro.props.t('contact.form.success');
const errorMessage = Astro.props.t('contact.form.error');
---

<div class="contact" id="kontakt">
  <div class="contact-info">
    <h2 class="contact-info-heading">{t('contact.heading')}</h2>
    <p class="contact-info-text">
      {t('contact.text')}
    </p>
    <div class="contact-info-contactdetails">
      <img src={envelope.src} alt="koperta" />
      <p>contact@veska.dev</p>
    </div>
    <div class="contact-info-contactdetails">
      <img src={phone.src} alt="telefon" />
      <p>+43 67763410623</p>
    </div>
  </div>
  <div class="contact-formbox">
    <form method="POST" class="contact-formbox-form">
      <p class="contact-formbox-label">{t('contact.form.name')}</p>
      <input
          class="contact-formbox-input"
          type="text"
          placeholder={t('contact.form.placeholder.name')}
          name="name"
          required
      />
      <p class="contact-formbox-label">{t('contact.form.email')}</p>
      <input
          class="contact-formbox-input"
          type="email"
          placeholder={t('contact.form.placeholder.email')}
          name="email"
          required
      />
      <p class="contact-formbox-label">{t('contact.form.phone')}</p>
      <input
          class="contact-formbox-input"
          type="tel"
          placeholder={t('contact.form.placeholder.phone')}
          name="tel"
          required
      />
      <p class="contact-formbox-label">{t('contact.form.message')}</p>
      <textarea
          class="contact-formbox-input"
          rows="10"
          name="message"
          placeholder={t('contact.form.placeholder.message')}
          required></textarea>
      <input class="contact-formbox-submit" type="submit" value={t('contact.form.submit')} />
    </form>
  </div>
</div>

<script is:inline>
  if (window.history.replaceState) {
    window.history.replaceState(null, null, window.location.href);
  }
</script>

<script define:vars={{successMessage, errorMessage}}>
  async function sendForm(e) {
    e.preventDefault();
    const data = new FormData(e.target);
    const parsedData = {};
    for (const entry of data) {
      parsedData[entry[0]] = entry[1];
    }

    // console.log(parsedData);
    const res = await fetch(
        "https://b3tksqsbg1.execute-api.eu-central-1.amazonaws.com/default/sendVeskaEmail",
        { method: "POST", body: JSON.stringify(parsedData) }
    );

    const body = await res.json();

    alert(
        body.success === 1
            ? successMessage
            : errorMessage
    );
  }

  document
      .querySelector(".contact-formbox-form")
      ?.addEventListener("submit", sendForm, false);
</script>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  // const tl = gsap.timeline();

  gsap.from(".contact-formbox > *", {
    scrollTrigger: ".contact-formbox",
    opacity: 0,
    y: -10,
    stagger: 0.1,
    duration: 1,
    delay: 1,
  });

  gsap.from(".contact-info-heading", {
    scrollTrigger: ".contact-info",
    y: -50,
    opacity: 0,
    duration: 0.5,
    // delay: 1,
  });
  gsap.from(".contact-info-text", {
    scrollTrigger: ".contact-info",
    y: -10,
    opacity: 0,
    duration: 0.5,
    delay: 0.5,
  });
  gsap.from(".contact-info-contactdetails", {
    scrollTrigger: ".contact-info",
    x: -10,
    opacity: 0,
    duration: 0.5,
    stagger: 0.5,
    delay: 2,
    // delay: .5
  });

  // tl.play();
</script>
